
// Creating an HTML page

<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Filter Demo</title>
</head>
<body>

<a href="dashboard?userid=johndoe">Account Dashboard</a><br>
<a href="profile?userid=johndoe">Account Profile</a><br>
<a href="dashboard">Account Dashboard</a><br>
<a href="info">Info Page</a><br>

</body>
</html>


// Creating an AccountProfile servlet 

import javax.servlet.ServletException;
import java.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;



@WebServlet("/AccountProfile")
public class AccountProfile extends HttpServlet {
        
      private static final long serialVersionUID=1L;  

      public AccountProfile(){
           super();

           }

           protected void doGet(HttpServletRequest request,HttpServletResponse response)
           throws IOException,ServletException{
               
               response.getWriter().write("I am in account profile after passing through login filter");


           }

            protected void doPost(HttpServletRequest request,HttpServletResponse response)
           throws IOException,ServletException{
               
               doGet(request,response);

           }


}





// Creating an AccountDashboard servlet 

import java.io.IOException;
import javax.servlet.ServletException;
import java.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;



@WebServlet("/AccountDashboard")
public class AccountDashboard extends HttpServlet {
        
      private static final long serialVersionUID=1L;  

      public AccountDashboard(){
           super();

           }

           protected void doGet(HttpServletRequest request,HttpServletResponse response)
           throws IOException,ServletException{
               
               response.getWriter().write("I am in account dashboard after passing through login filter");


           }

            protected void doPost(HttpServletRequest request,HttpServletResponse response)
           throws IOException,ServletException{
               
               doGet(request,response);

           }


}






// Creating an InfoPage servlet 

import java.io.IOException;
import javax.servlet.ServletException;
import java.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;



@WebServlet("/InfoPage")
public class InfoPage extends HttpServlet {
        
      private static final long serialVersionUID=1L;  

      public AccountDashboard(){
           super();

           }

           protected void doGet(HttpServletRequest request,HttpServletResponse response)
           throws IOException,ServletException{
               
               response.getWriter().write("I am InfoPage");

           }

            protected void doPost(HttpServletRequest request,HttpServletResponse response)
           throws IOException,ServletException{
               
               doGet(request,response);

           }


}




// Creating a LoginFilter filter 

import java.io.IOException;
import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import java.servlet.annotation.WebFilter;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;



@WebFilter("/LoginFilter")
public class LoginFilter implements Filter {
        
      

      public LoginFilter(){
           
           }

      public void destroy(){


           }





           protected void doFilter(ServletRequest request,ServletResponse response, FilterChain chain)
           throws IOException,ServletException{
               
              String userId=request.getParameter("userid");

if(userId!=null){

chain.doFilter(request,response);
}

           }

            public void init(FilterConfig fConfig)
           throws ServletException{
               
               
           }


}





// Configuring web.xml

<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  <display-name>FilterDemo</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>


  <filter>
    <filter-name>LoginFilter</filter-name>
    <filter-class>LoginFilter</filter-class>
  </filter>
  
  <filter-mapping>
    <filter-name>LoginFilter</filter-name>
    <url-pattern>/dashboard</url-pattern>
    <url-pattern>/profile</url-pattern> 
  </filter-mapping>


<servlet>
    <servlet-name>AccountDashboard</servlet-name>
    <servlet-class>AccountDashboard</servlet-class>
  </servlet>


<servlet>
    <servlet-name>AccountProfile</servlet-name>
    <servlet-class>AccountProfile</servlet-class>
  </servlet>


<servlet>
    <servlet-name>InfoPage</servlet-name>
    <servlet-class>InfoPage</servlet-class>
  </servlet>



<servlet-mapping>
    <servlet-name>AccountDashboard</servlet-name>
    <url-pattern>/dashboard</url-pattern>
   
  </servlet-mapping>


<servlet-mapping>
    <servlet-name>AccountProfile</servlet-name>
    <url-pattern>/profile</url-pattern>
   
  </servlet-mapping>

<servlet-mapping>
    <servlet-name>InfoPage</servlet-name>
    <url-pattern>/info</url-pattern>
   
  </servlet-mapping>





  
</web-app>





 